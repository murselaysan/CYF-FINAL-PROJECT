[{"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\index.js":"1","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\App.js":"3","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\Auth\\use-auth.js":"4","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\Auth\\useLocalStorage.js":"5","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\Auth\\useLocalstorage.js":"6","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\index.js":"7","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\UI\\Spinner.js":"8","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\Auth\\useFetch.js":"9","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\PrivateRouth.js":"10","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\HeaderComponent\\Header.js":"11","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\HeaderComponent\\Logo.js":"12","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\Pages\\StudentPages\\HomePage.js":"13","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\LoginForm.js":"14","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\HeroImage\\HeroImage.js":"15","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\Pages\\StudentPages\\RegisterPage.js":"16","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\RegisterForm.js":"17","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\FooterComponent\\Footer.js":"18","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\Pages\\StudentPages\\StudentMainPage.js":"19","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\StudentSideBar.jsx":"20","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\StudentModulesBody.js":"21","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\Modules Components\\JavaScript\\JavaScript.jsx":"22","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\Modules Components\\HTML-CSS\\HTML_CSS.jsx":"23","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\Modules Components\\NodeJS\\NodeJS.jsx":"24","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\Modules Components\\PostgreSQL\\PostgreSQL.jsx":"25","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\Modules Components\\REACTJS\\REACTJS.jsx":"26","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\Modules Components\\Git-GitHub\\Git_Github.jsx":"27","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\Pages\\MentorPages\\MentorClassesPage\\MentorClassesPage.jsx":"28","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\Pages\\MentorPages\\MentorRegion\\MentorRegionPage.jsx":"29","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\Pages\\MentorPages\\MentorClassStudentList\\StudentList.jsx":"30","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\MentorComponents\\Regions\\MentorRegions.jsx":"31","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\MentorComponents\\Classes\\WestMidlands Classes\\WestMidlandClasses.jsx":"32","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\HowToIntro.js":"33","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\RatingList.js":"34","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\MentorComponents\\Regions\\ComingSoon.jsx":"35","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\Pages\\MentorPages\\MentorIndividualGradeList\\MentorIndividualGradeList.jsx":"36","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\MentorComponents\\MentorSideBar.jsx":"37"},{"size":236,"mtime":1609787476435,"results":"38","hashOfConfig":"39"},{"size":362,"mtime":499162500000,"results":"40","hashOfConfig":"39"},{"size":3811,"mtime":1610658107703,"results":"41","hashOfConfig":"39"},{"size":2883,"mtime":1610736470842,"results":"42","hashOfConfig":"39"},{"size":1341,"mtime":1609591035372,"results":"43","hashOfConfig":"39"},{"size":1341,"mtime":1609591035372,"results":"44","hashOfConfig":"39"},{"size":569,"mtime":1610570726994,"results":"45","hashOfConfig":"39"},{"size":308,"mtime":1609757786931,"results":"46","hashOfConfig":"39"},{"size":1022,"mtime":1609587725598,"results":"47","hashOfConfig":"39"},{"size":703,"mtime":1609759764283,"results":"48","hashOfConfig":"39"},{"size":1246,"mtime":1610299876976,"results":"49","hashOfConfig":"39"},{"size":317,"mtime":1609759540273,"results":"50","hashOfConfig":"39"},{"size":1047,"mtime":1610463477596,"results":"51","hashOfConfig":"39"},{"size":2594,"mtime":1610659719135,"results":"52","hashOfConfig":"39"},{"size":400,"mtime":1609758973998,"results":"53","hashOfConfig":"39"},{"size":628,"mtime":1610050919560,"results":"54","hashOfConfig":"39"},{"size":4343,"mtime":1610707804432,"results":"55","hashOfConfig":"39"},{"size":615,"mtime":1609877515848,"results":"56","hashOfConfig":"39"},{"size":2170,"mtime":1610463477612,"results":"57","hashOfConfig":"39"},{"size":1332,"mtime":1610463477660,"results":"58","hashOfConfig":"39"},{"size":1669,"mtime":1610736667870,"results":"59","hashOfConfig":"39"},{"size":4628,"mtime":1610736801834,"results":"60","hashOfConfig":"39"},{"size":4148,"mtime":1610736760050,"results":"61","hashOfConfig":"39"},{"size":4139,"mtime":1610736837220,"results":"62","hashOfConfig":"39"},{"size":4133,"mtime":1610736863456,"results":"63","hashOfConfig":"39"},{"size":4146,"mtime":1610736896935,"results":"64","hashOfConfig":"39"},{"size":4453,"mtime":1611002295740,"results":"65","hashOfConfig":"39"},{"size":266,"mtime":1610572259214,"results":"66","hashOfConfig":"39"},{"size":231,"mtime":1610552631381,"results":"67","hashOfConfig":"39"},{"size":3276,"mtime":1611001903263,"results":"68","hashOfConfig":"39"},{"size":3236,"mtime":1610736587885,"results":"69","hashOfConfig":"39"},{"size":2571,"mtime":1610736566176,"results":"70","hashOfConfig":"39"},{"size":1594,"mtime":1610576124009,"results":"71","hashOfConfig":"39"},{"size":779,"mtime":1610576124057,"results":"72","hashOfConfig":"39"},{"size":370,"mtime":1610707059149,"results":"73","hashOfConfig":"39"},{"size":3145,"mtime":1610736927774,"results":"74","hashOfConfig":"39"},{"size":1285,"mtime":1610707059141,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"xyaixa",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"78"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"78"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"78"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"78"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"78"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"78"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"78"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"78"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"78"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\index.js",[],["164","165"],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\reportWebVitals.js",[],["166","167"],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\App.js",["168","169"],"import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport {Header, PrivateRoute, Home, RegisterPage } from \"./components\";\r\nimport StudentMainPage from './Pages/StudentPages/StudentMainPage'\r\nimport { ProvideAuth } from \"../src/Auth/use-auth\";\r\nimport Footer from \"./components/FooterComponent/Footer\";\r\nimport JavaScript from \"./components/StudentComponents/Modules Components/JavaScript/JavaScript\";\r\nimport HTML_CSS from \"./components/StudentComponents/Modules Components/HTML-CSS/HTML_CSS\";\r\nimport Git_GitHub from \"./components/StudentComponents/Modules Components/Git-GitHub/Git_Github\";\r\n\r\nimport NodeJS from \"./components/StudentComponents/Modules Components/NodeJS/NodeJS\";\r\nimport PostgreSQL from \"./components/StudentComponents/Modules Components/PostgreSQL/PostgreSQL\";\r\nimport REACTJS from \"./components/StudentComponents/Modules Components/REACTJS/REACTJS\";\r\nimport MentorRegionPage from './Pages/MentorPages/MentorRegion/MentorRegionPage';\r\nimport MentorClassesPage from './Pages/MentorPages/MentorClassesPage/MentorClassesPage';\r\n//import StudentList from \"./Pages/MentorPages/MentorClassStudentList/StudentList\";\r\nimport WestMidlandClasses from \"./components/MentorComponents/Classes/WestMidlands Classes/WestMidlandClasses\";\r\nimport StudentList from \"./Pages/MentorPages/MentorClassStudentList/StudentList\";\r\nimport ComingSoon from \"./components/MentorComponents/Regions/ComingSoon\";\r\nimport MentorIndividualGradeList from \"./Pages/MentorPages/MentorIndividualGradeList/MentorIndividualGradeList\";\r\n\r\n\r\n\r\n\r\nfunction App({match}) {\r\n\treturn (\r\n\t\t\r\n\t\t<Router>\r\n\t\t\t<ProvideAuth>\r\n\t\t\t\t<Header />\r\n\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route exact path=\"/\">\r\n                        <Home />\r\n\t\t\t\t\t\t</Route>\r\n                        <Route exact path=\"/register\">\r\n                            <RegisterPage />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<PrivateRoute path=\"/student_main\">\r\n\t\t\t\t\t\t\t<StudentMainPage />\r\n\t\t\t\t\t\t</PrivateRoute>\r\n\t\t\t\t\t\t<PrivateRoute path=\"/modules/JavaScript\">\r\n\t\t\t\t\t\t    <JavaScript />\r\n\t\t\t\t\t\t</PrivateRoute>\r\n\t\t\t\t\t\t<PrivateRoute path=\"/modules/HTML_CSS\">\r\n\t\t\t\t\t\t    <HTML_CSS />\r\n\t\t\t\t\t\t</PrivateRoute>\r\n\t\t\t\t\t\t<PrivateRoute path=\"/modules/Git_GitHub\">\r\n\t\t\t\t\t\t    <Git_GitHub/>\r\n\t\t\t\t\t\t</PrivateRoute>\r\n\t\t\t\t\t\t<PrivateRoute path=\"/modules/NodeJS\">\r\n\t\t\t\t\t\t<NodeJS />\r\n\t\t\t\t\t\t</PrivateRoute>\r\n\t\t\t\t\t\t<PrivateRoute path=\"/modules/PostgreSQL\">\r\n\t\t\t\t\t\t<PostgreSQL />\r\n\t\t\t\t\t\t</PrivateRoute>\r\n\t\t\t\t\t\t<PrivateRoute path=\"/modules/ReactJS\">\r\n\t\t\t\t\t\t<REACTJS/>\r\n\t\t\t\t\t\t</PrivateRoute>\r\n\r\n\t\t\t\t\t\t<PrivateRoute path=\"/region\">\r\n\t\t\t\t\t\t<MentorRegionPage />\r\n\t\t\t\t\t\t</PrivateRoute>\r\n                     \r\n\t\t\t\t\t \r\n\t\t\t\t\t \t<PrivateRoute path=\"/regions/classes/West Midlands\">\r\n\t\t                  <WestMidlandClasses />\r\n\t\t\t\t\t\t</PrivateRoute>\r\n\r\n\r\n\t\t\t\t\t\t<PrivateRoute path=\"/West Midlands/West Midlands Class 1/Students\">\r\n\t\t\t\t\t\t<StudentList />\r\n\t\t\t\t\t\t</PrivateRoute>\r\n\r\n\r\n\t\t\t\t\t\t<PrivateRoute path=\"/West Midlands/West Midlands Class 2/Students\">\r\n\t\t\t\t\t\t<ComingSoon/>\r\n\t\t\t\t\t\t</PrivateRoute>\r\n\r\n\t\t\t\t\t\t<PrivateRoute path=\"/regions/classes/London\">\r\n\t\t\t\t\t\t<ComingSoon />\r\n\t\t\t\t\t\t</PrivateRoute>\r\n\r\n\t\t\t\t\t\t<PrivateRoute path=\"/regions/classes/Cape Town\">\r\n\t\t\t\t\t\t<ComingSoon />\r\n\t\t\t\t\t\t</PrivateRoute>\r\n\r\n\t\t\t\t\t\t<PrivateRoute path=\"/regions/classes/North West\">\r\n\t\t\t\t\t\t<ComingSoon />\r\n\t\t\t\t\t\t</PrivateRoute>\r\n\r\n\t\t\t\t\t\t<PrivateRoute path=\"/regions/classes/Roma\">\r\n\t\t\t\t\t\t<ComingSoon />\r\n\t\t\t\t\t\t</PrivateRoute>\r\n\r\n\t\t\t\t\t\t<PrivateRoute path=\"/regions/classes/Scotland\">\r\n\t\t\t\t\t\t<ComingSoon />\r\n\t\t\t\t\t\t</PrivateRoute>\r\n\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t<PrivateRoute path=\"/students/:id\">\r\n\t\t\t\t\t\t<MentorIndividualGradeList/>\r\n\t\t\t\t\t\t</PrivateRoute>\r\n\t\t\t\r\n\r\n\r\n\t\r\n\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</Container>\r\n\t\t\t\t<Footer />\r\n\t\t\t</ProvideAuth>\r\n\t\t</Router>\r\n\t);\r\n}\r\n\r\nexport default App;","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\Auth\\use-auth.js",[],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\Auth\\useLocalStorage.js",[],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\Auth\\useLocalstorage.js",[],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\index.js",[],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\UI\\Spinner.js",[],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\Auth\\useFetch.js",[],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\PrivateRouth.js",["170"],"import { Route, Redirect } from 'react-router-dom';\r\nimport { useAuth } from '../Auth/use-auth';\r\nimport Spinner from './UI/Spinner';\r\n\r\n// A wrapper for <Route> that redirects to the login\r\n// screen if user not yet authenticated.\r\nconst PrivateRoute = ({ children, ...rest }) => {\r\n  let auth = useAuth();\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) => {\r\n        return auth.user ? (\r\n          children\r\n        ) : (\r\n          // <Redirect\r\n          //   to={{\r\n          //     pathname: '/',\r\n          //     state: { from: location },\r\n          //   }}\r\n          // />\r\n          <Spinner />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\HeaderComponent\\Header.js",[],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\HeaderComponent\\Logo.js",[],["171","172"],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\Pages\\StudentPages\\HomePage.js",[],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\LoginForm.js",[],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\HeroImage\\HeroImage.js",[],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\Pages\\StudentPages\\RegisterPage.js",[],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\RegisterForm.js",[],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\FooterComponent\\Footer.js",[],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\Pages\\StudentPages\\StudentMainPage.js",[],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\StudentSideBar.jsx",[],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\StudentModulesBody.js",["173","174"],"import React, { useState } from \"react\";\r\nimport { Route, Link } from \"react-router-dom\";\r\nimport useFetch from \"../../Auth/useFetch\";\r\nimport Spinner from \"../UI/Spinner\";\r\nimport \"./StudentModulesBody.scss\";\r\n//import JavaScript from \"../../components/StudentComponents/Modules Components/JavaScript/JavaScript\";\r\n//import { Progress } from \"antd\";\r\n//import HTML_CSS from \"./Modules Components/HTML-CSS/HTML_CSS\";\r\n//import JavaScript from \"./Modules Components/JavaScript/JavaScript\";\r\n//import NodeJS from \"./Modules Components/NodeJS/NodeJS\";\r\n//import PostgreSQL from \"./Modules Components/PostgreSQL/PostgreSQL\";\r\n//import {Demo,getAverage,} from \"../StudentComponents/Modules Components/JavaScript/JavaScript\";\r\n\r\nexport default function StudentModulesBody() {\r\n  let { status, data, error } = useFetch(`${process.env.REACT_APP_URL}/api/subjects`);\r\n\r\n  if (status === \"error\") {\r\n    return <div>Error: {error.message}</div>;\r\n  } else if (status === \"success\") {\r\n    return <SubjectList data={data} />;\r\n  } else {\r\n    return <Spinner />;\r\n  }\r\n}\r\n\r\nconst SubjectList = ({ data }) => {\r\n  const [subjects, setSubjects] = useState(data);\r\n\r\n  return (\r\n    <div>\r\n\r\n\r\n      <div className=\"row\">\r\n        {subjects.map(({ name }) => (\r\n          <div className= \"moduleDiv\">\r\n            <div className=\"text-center modules\" key={name}>\r\n              <Link to={`/modules/${name}`}>\r\n\r\n                <h2 className=\"\">{name}</h2>\r\n              </Link>\r\n\r\n\r\n            </div>\r\n            <div>\r\n            {/* <Route path={`/modules/${name}`} component={name} /> */}\r\n          </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\Modules Components\\JavaScript\\JavaScript.jsx",["175","176","177","178"],"import React, { useState, useEffect } from \"react\";\r\nimport useFetch from \"../../../../Auth/useFetch\";\r\nimport Spinner from \"../../../UI/Spinner\";\r\nimport { Table, Button } from \"antd\";\r\nimport { Progress } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./JavaScript.scss\";\r\nimport { useAuth } from \"../../../../Auth/use-auth\";\r\nimport HowToIntro from \"../../../StudentComponents/HowToIntro\";\r\n\r\nexport default function JavaScript() {\r\n  let { status, data, error } = useFetch(\r\n    `${process.env.REACT_APP_URL}/api/Modules/JavaScript/Topics`\r\n  );\r\n  console.log(data);\r\n  const auth = useAuth();\r\n\r\n  const [grade, setGrade] = useState({});\r\n\r\n  let { status: gradeStatus, data: gradeData, error: gradeError } = useFetch(\r\n    `${process.env.REACT_APP_URL}/api/Modules/Users/${auth.user.id}/GetGrade`\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!gradeData || !data) {\r\n      return;\r\n    }\r\n    let topicId = data.map((x) => x.topic_id);\r\n\r\n    let tempGradeData = {};\r\n    gradeData.forEach((item) => {\r\n      if (topicId.includes(item.topic_id)) {\r\n        tempGradeData[item.topic_id] = item.vote;\r\n      }\r\n    });\r\n    setGrade(tempGradeData);\r\n  }, [gradeData, data]);\r\n\r\n  console.log(gradeData);\r\n\r\n  if (status === \"error\") {\r\n    return <div>Error: {error.message}</div>;\r\n  } else if (status === \"success\") {\r\n    return <JavaScriptTopicList data={data} gradeData={grade} />;\r\n  } else {\r\n    return <Spinner />;\r\n  }\r\n}\r\n\r\nexport const getAverage = (valuesObject) => {\r\n  return parseInt(\r\n    Object.values(valuesObject).reduce(\r\n      (accumulator, currentValue) => accumulator + parseInt(currentValue),\r\n      0\r\n    ) / Object.values(valuesObject).length\r\n  );\r\n};\r\n\r\nexport const Demo = ({ newAddingValue }) => {\r\n  return (\r\n    <div>\r\n      <Progress\r\n        strokeColor={{\r\n          from: \"#d12f2f\",\r\n          to: \"#87d068\",\r\n        }}\r\n        strokeWidth=\"20px\"\r\n        percent={newAddingValue}\r\n        status=\"active\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst JavaScriptTopicList = ({ data, gradeData }) => {\r\n  const tableHeaders = [20, 40, 60, 80, 100];\r\n  const auth = useAuth();\r\n  const [state, setState] = useState({\r\n    task: { options: tableHeaders, extras: data },\r\n    selected: gradeData,\r\n  });\r\n  const onRadioChange = (e) => {\r\n    let name = e.currentTarget.id;\r\n    let value = e.currentTarget.value;\r\n    setState({\r\n      ...state,\r\n      selected: { ...state.selected, [name]: value },\r\n    });\r\n  };\r\n  console.log(state);\r\n\r\n  useEffect(() => {\r\n    setState({ ...state, selected: gradeData });\r\n  }, [gradeData]);\r\n\r\n  const onSubmit = () => {\r\n    // convert TO array\r\n    const results = [];\r\n    for (const [key, value] of Object.entries(state.selected)) {\r\n      results.push({\r\n        topic_id: key,\r\n        vote: value,\r\n      });\r\n    }\r\n    fetch(`${process.env.REACT_APP_URL}/api/users/${auth.user.id}/add-grade`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${JSON.parse(\r\n          window.localStorage.getItem(\"token\")\r\n        )}`,\r\n      },\r\n      body: JSON.stringify(results),\r\n    });\r\n  };\r\n  let columns = [];\r\n  columns.push({\r\n    title: \"Topics\",\r\n    dataIndex: \"name\",\r\n    key: \"name\",\r\n    width: \"30vw\",\r\n  });\r\n  state.task.options.forEach((option, i) => {\r\n    columns.push({\r\n      title: option,\r\n      key: option,\r\n      align: \"center\",\r\n      render: (row) => {\r\n        return (\r\n          <input\r\n            type=\"radio\"\r\n            checked={state.selected[row.id] == option}\r\n            onChange={onRadioChange}\r\n            name={row.name}\r\n            id={row.id}\r\n            value={option}\r\n          />\r\n        );\r\n      },\r\n    });\r\n  });\r\n  let rowHeaders = [];\r\n  state.task.extras.forEach((extra, i) => {\r\n    rowHeaders.push({ id: extra.topic_id, name: `${i + 1}.${extra.name}` });\r\n  });\r\n  return (\r\n    <div>\r\n      <div className=\"backDiv\">\r\n        <Button href=\"/student_main\" className=\"backLink btn-lg rounded-lg\">\r\n          Back To Modules\r\n        </Button>\r\n      </div>\r\n      <h1>JavaScript</h1>\r\n      <HowToIntro />\r\n      <Table\r\n        columns={columns}\r\n        dataSource={rowHeaders}\r\n        size=\"middle\"\r\n        bordered\r\n        pagination={false}\r\n      />\r\n      <br />\r\n      <Demo newAddingValue={getAverage(state.selected)} />\r\n      <br />\r\n      <div className=\"subBut\">\r\n        <Button\r\n          onClick={onSubmit}\r\n          type=\"primary\"\r\n          id=\"submitBtn\"\r\n          className=\"btn-lg rounded-lg\"\r\n        >\r\n          {\" \"}\r\n          Submit\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\Modules Components\\HTML-CSS\\HTML_CSS.jsx",["179","180","181","182"],"import React, { useState, useEffect } from \"react\";\r\nimport useFetch from \"../../../../Auth/useFetch\";\r\nimport Spinner from \"../../../UI/Spinner\";\r\nimport { Table, Button } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./HTML_CSS.scss\";\r\nimport { Demo, getAverage } from \"../JavaScript/JavaScript\";\r\nimport { useAuth } from \"../../../../Auth/use-auth\";\r\nimport HowToIntro from \"../../../StudentComponents/HowToIntro\";\r\n\r\nexport default function HTML_CSS(e) {\r\n  let { status, data, error } = useFetch(\r\n    `${process.env.REACT_APP_URL}/api/Modules/HTML_CSS/Topics`\r\n  );\r\n  console.log(data);\r\n  const auth = useAuth();\r\n\r\n  const [grade, setGrade] = useState({});\r\n\r\n  let { status: gradeStatus, data: gradeData, error: gradeError } = useFetch(\r\n    `${process.env.REACT_APP_URL}/api/Modules/Users/${auth.user.id}/GetGrade`\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!gradeData || !data) {\r\n      return;\r\n    }\r\n    let topicId = data.map((x) => x.topic_id);\r\n\r\n    let tempGradeData = {};\r\n    gradeData.forEach((item) => {\r\n      if (topicId.includes(item.topic_id)) {\r\n        tempGradeData[item.topic_id] = item.vote;\r\n      }\r\n    });\r\n    setGrade(tempGradeData);\r\n  }, [gradeData, data]);\r\n\r\n  console.log(gradeData);\r\n\r\n  if (status === \"error\") {\r\n    return <div>Error: {error.message}</div>;\r\n  } else if (status === \"success\") {\r\n    return <HtmlTopicList data={data} gradeData={grade} />;\r\n  } else {\r\n    return <Spinner />;\r\n  }\r\n}\r\n\r\nconst HtmlTopicList = ({ data, gradeData }) => {\r\n  console.log(\"this the data\", data);\r\n  const tableHeaders = [20, 40, 60, 80, 100];\r\n  const auth = useAuth();\r\n  const [state, setState] = useState({\r\n    task: { options: tableHeaders, extras: data },\r\n    selected: gradeData,\r\n  });\r\n  const onRadioChange = (e) => {\r\n    console.log(e.currentTarget);\r\n    let name = e.currentTarget.id;\r\n    let value = e.currentTarget.value;\r\n    setState({\r\n      ...state,\r\n      selected: { ...state.selected, [name]: value },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setState({ ...state, selected: gradeData });\r\n  }, [gradeData]);\r\n\r\n  const onSubmit = () => {\r\n    // convert TO array\r\n    const results = [];\r\n    for (const [key, value] of Object.entries(state.selected)) {\r\n      results.push({\r\n        topic_id: key,\r\n        vote: value,\r\n      });\r\n    }\r\n    fetch(`${process.env.REACT_APP_URL}/api/users/${auth.user.id}/add-grade`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${JSON.parse(\r\n          window.localStorage.getItem(\"token\")\r\n        )}`,\r\n      },\r\n      body: JSON.stringify(results),\r\n    });\r\n  };\r\n  let columns = [];\r\n  columns.push({\r\n    title: \"HTML-CSS Topics\",\r\n    dataIndex: \"name\",\r\n    key: \"name\",\r\n    width: \"30vw\",\r\n  });\r\n  state.task.options.forEach((option, i) => {\r\n    columns.push({\r\n      title: option,\r\n      key: option,\r\n      align: \"center\",\r\n      render: (row) => {\r\n        return (\r\n          <input\r\n            type=\"radio\"\r\n            checked={state.selected[row.id] == option}\r\n            onChange={onRadioChange}\r\n            name={row.name}\r\n            id={row.id}\r\n            value={option}\r\n          />\r\n        );\r\n      },\r\n    });\r\n  });\r\n  let rowHeaders = [];\r\n  state.task.extras.forEach((extra, i) => {\r\n    rowHeaders.push({ id: extra.topic_id, name: `${i + 1}.${extra.name}` });\r\n  });\r\n  return (\r\n    <div>\r\n      <div className=\"backDiv\">\r\n        <Button href=\"/student_main\" className=\"backLink btn-lg rounded-lg\">\r\n          Back To Modules\r\n        </Button>\r\n      </div>\r\n      <h1>HTML-CSS</h1>\r\n      <HowToIntro />\r\n      <Table\r\n        columns={columns}\r\n        dataSource={rowHeaders}\r\n        size=\"middle\"\r\n        bordered\r\n        pagination={false}\r\n      />\r\n      <br />\r\n      <Demo newAddingValue={getAverage(state.selected)} />\r\n      <br />\r\n      <div className=\"subBut\">\r\n        <Button\r\n          onClick={onSubmit}\r\n          type=\"primary\"\r\n          id=\"submitBtn\"\r\n          className=\"btn-lg rounded-lg\"\r\n        >\r\n          {\" \"}\r\n          Submit\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\Modules Components\\NodeJS\\NodeJS.jsx",["183","184","185","186","187"],"import React, { useState, useEffect } from \"react\";\r\nimport useFetch from \"../../../../Auth/useFetch\";\r\nimport Spinner from \"../../../UI/Spinner\";\r\nimport { Table, Button, Tag } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./NodeJS.scss\";\r\nimport { Demo, getAverage } from \"../JavaScript/JavaScript\";\r\nimport { useAuth } from \"../../../../Auth/use-auth\";\r\nimport HowToIntro from \"../../../StudentComponents/HowToIntro\";\r\n\r\nexport default function NodeJS() {\r\n  let { status, data, error } = useFetch(\r\n    `${process.env.REACT_APP_URL}/api/Modules/NodeJS/Topics`\r\n  );\r\n  console.log(data);\r\n  const auth = useAuth();\r\n\r\n  const [grade, setGrade] = useState({});\r\n\r\n  let { status: gradeStatus, data: gradeData, error: gradeError } = useFetch(\r\n    `${process.env.REACT_APP_URL}/api/Modules/Users/${auth.user.id}/GetGrade`\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!gradeData || !data) {\r\n      return;\r\n    }\r\n    let topicId = data.map((x) => x.topic_id);\r\n\r\n    let tempGradeData = {};\r\n    gradeData.forEach((item) => {\r\n      if (topicId.includes(item.topic_id)) {\r\n        tempGradeData[item.topic_id] = item.vote;\r\n      }\r\n    });\r\n    setGrade(tempGradeData);\r\n  }, [gradeData, data]);\r\n\r\n  console.log(gradeData);\r\n  if (status === \"error\") {\r\n    return <div>Error: {error.message}</div>;\r\n  } else if (status === \"success\") {\r\n    return <NodeJsTopicList data={data} gradeData={grade} />;\r\n  } else {\r\n    return <Spinner />;\r\n  }\r\n}\r\n\r\nconst NodeJsTopicList = ({ data, gradeData }) => {\r\n  console.log(\"this the data\", data);\r\n  const tableHeaders = [20, 40, 60, 80, 100];\r\n  const auth = useAuth();\r\n  const [state, setState] = useState({\r\n    task: { options: tableHeaders, extras: data },\r\n    selected: gradeData,\r\n  });\r\n  const onRadioChange = (e) => {\r\n    console.log(e.currentTarget);\r\n    let name = e.currentTarget.id;\r\n    let value = e.currentTarget.value;\r\n    setState({\r\n      ...state,\r\n      selected: { ...state.selected, [name]: value },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setState({ ...state, selected: gradeData });\r\n  }, [gradeData]);\r\n\r\n  const onSubmit = () => {\r\n    // convert TO array\r\n    const results = [];\r\n    for (const [key, value] of Object.entries(state.selected)) {\r\n      results.push({\r\n        topic_id: key,\r\n        vote: value,\r\n      });\r\n    }\r\n    fetch(`${process.env.REACT_APP_URL}/api/users/${auth.user.id}/add-grade`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${JSON.parse(\r\n          window.localStorage.getItem(\"token\")\r\n        )}`,\r\n      },\r\n      body: JSON.stringify(results),\r\n    });\r\n  };\r\n  let columns = [];\r\n  columns.push({\r\n    title: \"Topics\",\r\n    dataIndex: \"name\",\r\n    key: \"name\",\r\n    width: \"30vw\",\r\n  });\r\n  state.task.options.forEach((option, i) => {\r\n    columns.push({\r\n      title: option,\r\n      key: option,\r\n      align: \"center\",\r\n      render: (row) => {\r\n        return (\r\n          <input\r\n            type=\"radio\"\r\n            checked={state.selected[row.id] == option}\r\n            onChange={onRadioChange}\r\n            name={row.name}\r\n            id={row.id}\r\n            value={option}\r\n          />\r\n        );\r\n      },\r\n    });\r\n  });\r\n  let rowHeaders = [];\r\n  state.task.extras.forEach((extra, i) => {\r\n    rowHeaders.push({ id: extra.topic_id, name: `${i + 1}.${extra.name}` });\r\n  });\r\n  return (\r\n    <div>\r\n      <div className=\"backDiv\">\r\n        <Button href=\"/student_main\" className=\"backLink btn-lg rounded-lg\">\r\n          Back To Modules\r\n        </Button>\r\n      </div>\r\n      <h1>NodeJS</h1>\r\n      <HowToIntro />\r\n      <Table\r\n        columns={columns}\r\n        dataSource={rowHeaders}\r\n        size=\"middle\"\r\n        bordered\r\n        pagination={false}\r\n      />\r\n      <br />\r\n      <Demo newAddingValue={getAverage(state.selected)} />\r\n      <br />\r\n      <div className=\"subBut\">\r\n        <Button\r\n          onClick={onSubmit}\r\n          type=\"primary\"\r\n          id=\"submitBtn\"\r\n          className=\"btn-lg rounded-lg\"\r\n        >\r\n          {\" \"}\r\n          Submit\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\Modules Components\\PostgreSQL\\PostgreSQL.jsx",["188","189","190","191"],"import React, { useState, useEffect } from \"react\";\r\nimport useFetch from \"../../../../Auth/useFetch\";\r\nimport Spinner from \"../../../UI/Spinner\";\r\nimport { Table, Button } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./PostgreSQL.scss\";\r\nimport { Demo, getAverage } from \"../JavaScript/JavaScript\";\r\nimport { useAuth } from \"../../../../Auth/use-auth\";\r\nimport HowToIntro from \"../../../StudentComponents/HowToIntro\";\r\n\r\nexport default function PostgreSQL() {\r\n  let { status, data, error } = useFetch(\r\n    `${process.env.REACT_APP_URL}/api/Modules/PostgreSQL/Topics`\r\n  );\r\n\r\n  console.log(data);\r\n  const auth = useAuth();\r\n\r\n  const [grade, setGrade] = useState({});\r\n\r\n  let { status: gradeStatus, data: gradeData, error: gradeError } = useFetch(\r\n    `${process.env.REACT_APP_URL}/api/Modules/Users/${auth.user.id}/GetGrade`\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!gradeData || !data) {\r\n      return;\r\n    }\r\n    let topicId = data.map((x) => x.topic_id);\r\n\r\n    let tempGradeData = {};\r\n    gradeData.forEach((item) => {\r\n      if (topicId.includes(item.topic_id)) {\r\n        tempGradeData[item.topic_id] = item.vote;\r\n      }\r\n    });\r\n    setGrade(tempGradeData);\r\n  }, [gradeData, data]);\r\n\r\n  console.log(gradeData);\r\n\r\n  if (status === \"error\") {\r\n    return <div>Error: {error.message}</div>;\r\n  } else if (status === \"success\") {\r\n    return <PostgreSqlTopicList data={data} gradeData={grade} />;\r\n  } else {\r\n    return <Spinner />;\r\n  }\r\n}\r\n\r\nconst PostgreSqlTopicList = ({ data, gradeData }) => {\r\n  console.log(\"this the data\", data);\r\n  const tableHeaders = [20, 40, 60, 80, 100];\r\n  const auth = useAuth();\r\n  const [state, setState] = useState({\r\n    task: { options: tableHeaders, extras: data },\r\n    selected: gradeData,\r\n  });\r\n  const onRadioChange = (e) => {\r\n    \r\n    let name = e.currentTarget.id;\r\n    let value = e.currentTarget.value;\r\n    setState({\r\n      ...state,\r\n      selected: { ...state.selected, [name]: value },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setState({ ...state, selected: gradeData });\r\n  }, [gradeData]);\r\n\r\n  const onSubmit = () => {\r\n    // convert TO array\r\n    const results = [];\r\n    for (const [key, value] of Object.entries(state.selected)) {\r\n      results.push({\r\n        topic_id: key,\r\n        vote: value,\r\n      });\r\n    }\r\n    fetch(`${process.env.REACT_APP_URL}/api/users/${auth.user.id}/add-grade`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${JSON.parse(\r\n          window.localStorage.getItem(\"token\")\r\n        )}`,\r\n      },\r\n      body: JSON.stringify(results),\r\n    });\r\n  };\r\n  let columns = [];\r\n  columns.push({\r\n    title: \"Topics\",\r\n    dataIndex: \"name\",\r\n    key: \"name\",\r\n    width: \"30vw\",\r\n  });\r\n  state.task.options.forEach((option, i) => {\r\n    columns.push({\r\n      title: option,\r\n      key: option,\r\n      align: \"center\",\r\n      render: (row) => {\r\n        return (\r\n          <input\r\n            type=\"radio\"\r\n            checked={state.selected[row.id] == option}\r\n            onChange={onRadioChange}\r\n            name={row.name}\r\n            id={row.id}\r\n            value={option}\r\n          />\r\n        );\r\n      },\r\n    });\r\n  });\r\n  let rowHeaders = [];\r\n  state.task.extras.forEach((extra, i) => {\r\n    rowHeaders.push({ id: extra.topic_id, name: `${i + 1}.${extra.name}` });\r\n  });\r\n  return (\r\n    <div>\r\n      <div className=\"backDiv\">\r\n        <Button href=\"/student_main\" className=\"backLink btn-lg rounded-lg\">\r\n          Back To Modules\r\n        </Button>\r\n      </div>\r\n      <h1>PostgreSQL</h1>\r\n      <HowToIntro />\r\n      <Table\r\n        columns={columns}\r\n        dataSource={rowHeaders}\r\n        size=\"middle\"\r\n        bordered\r\n        pagination={false}\r\n      />\r\n      <br />\r\n      <Demo newAddingValue={getAverage(state.selected)} />\r\n      <br />\r\n      <div className=\"subBut\">\r\n        <Button\r\n          onClick={onSubmit}\r\n          type=\"primary\"\r\n          id=\"submitBtn\"\r\n          className=\"btn-lg rounded-lg\"\r\n        >\r\n          {\" \"}\r\n          Submit\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\Modules Components\\REACTJS\\REACTJS.jsx",["192","193","194","195"],"import React, { useState, useEffect } from \"react\";\r\nimport useFetch from \"../../../../Auth/useFetch\";\r\nimport Spinner from \"../../../UI/Spinner\";\r\nimport { Table, Button } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./REACTJS.scss\";\r\nimport { Demo, getAverage } from \"../JavaScript/JavaScript\";\r\nimport { useAuth } from \"../../../../Auth/use-auth\";\r\nimport HowToIntro from \"../../../StudentComponents/HowToIntro\";\r\n\r\nexport default function ReactJs() {\r\n  let { status, data, error } = useFetch(\r\n    `${process.env.REACT_APP_URL}/api/Modules/ReactJs/Topics`\r\n  );\r\n  console.log(data);\r\n  const auth = useAuth();\r\n\r\n  const [grade, setGrade] = useState({});\r\n\r\n  let { status: gradeStatus, data: gradeData, error: gradeError } = useFetch(\r\n    `${process.env.REACT_APP_URL}/api/Modules/Users/${auth.user.id}/GetGrade`\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!gradeData || !data) {\r\n      return;\r\n    }\r\n    let topicId = data.map((x) => x.topic_id);\r\n\r\n    let tempGradeData = {};\r\n    gradeData.forEach((item) => {\r\n      if (topicId.includes(item.topic_id)) {\r\n        tempGradeData[item.topic_id] = item.vote;\r\n      }\r\n    });\r\n    setGrade(tempGradeData);\r\n  }, [gradeData, data]);\r\n\r\n  console.log(gradeData);\r\n\r\n  if (status === \"error\") {\r\n    return <div>Error: {error.message}</div>;\r\n  } else if (status === \"success\") {\r\n    return <ReactJsTopicList data={data} gradeData={grade} />;\r\n  } else {\r\n    return <Spinner />;\r\n  }\r\n}\r\n\r\n\r\nconst ReactJsTopicList = ({ data, gradeData }) => {\r\n  console.log(\"this the data\", data);\r\n  const tableHeaders = [20, 40, 60, 80, 100];\r\n  const auth = useAuth();\r\n  const [state, setState] = useState({\r\n    task: { options: tableHeaders, extras: data },\r\n    selected: gradeData,\r\n  });\r\n  const onRadioChange = (e) => {\r\n    console.log(e.currentTarget);\r\n    let name = e.currentTarget.id;\r\n    let value = e.currentTarget.value;\r\n    setState({\r\n      ...state,\r\n      selected: { ...state.selected, [name]: value },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setState({ ...state, selected: gradeData });\r\n  }, [gradeData]);\r\n\r\n  const onSubmit = () => {\r\n    // convert TO array\r\n    const results = [];\r\n    for (const [key, value] of Object.entries(state.selected)) {\r\n      results.push({\r\n        topic_id: key,\r\n        vote: value,\r\n      });\r\n    }\r\n    fetch(`${process.env.REACT_APP_URL}/api/users/${auth.user.id}/add-grade`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${JSON.parse(\r\n          window.localStorage.getItem(\"token\")\r\n        )}`,\r\n      },\r\n      body: JSON.stringify(results),\r\n    });\r\n  };\r\n  let columns = [];\r\n  columns.push({\r\n    title: \"Topics\",\r\n    dataIndex: \"name\",\r\n    key: \"name\",\r\n    width: \"30vw\",\r\n  });\r\n  state.task.options.forEach((option, i) => {\r\n    columns.push({\r\n      title: option,\r\n      key: option,\r\n      align: \"center\",\r\n      render: (row) => {\r\n        return (\r\n          <input\r\n            type=\"radio\"\r\n            checked={state.selected[row.id] == option}\r\n            onChange={onRadioChange}\r\n            name={row.name}\r\n            id={row.id}\r\n            value={option}\r\n          />\r\n        );\r\n      },\r\n    });\r\n  });\r\n  let rowHeaders = [];\r\n  state.task.extras.forEach((extra, i) => {\r\n    rowHeaders.push({ id: extra.topic_id, name: `${i + 1}.${extra.name}` });\r\n  });\r\n  return (\r\n    <div>\r\n      <div className=\"backDiv\">\r\n        <Button href=\"/student_main\" className=\"backLink btn-lg rounded-lg\">\r\n          Back To Modules\r\n        </Button>\r\n      </div>\r\n      <h1>REACTJS</h1>\r\n      <HowToIntro />\r\n\r\n      <Table\r\n        columns={columns}\r\n        dataSource={rowHeaders}\r\n        size=\"middle\"\r\n        bordered\r\n        pagination={false}\r\n      />\r\n      <br />\r\n      <Demo newAddingValue={getAverage(state.selected)} />\r\n      <br />\r\n      <div className=\"subBut\">\r\n        <Button\r\n          onClick={onSubmit}\r\n          type=\"primary\"\r\n          id=\"submitBtn\"\r\n          className=\"btn-lg rounded-lg\"\r\n        >\r\n          {\" \"}\r\n          Submit\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\Modules Components\\Git-GitHub\\Git_Github.jsx",["196","197","198","199","200","201"],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\Pages\\MentorPages\\MentorClassesPage\\MentorClassesPage.jsx",[],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\Pages\\MentorPages\\MentorRegion\\MentorRegionPage.jsx",[],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\Pages\\MentorPages\\MentorClassStudentList\\StudentList.jsx",["202"],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\MentorComponents\\Regions\\MentorRegions.jsx",["203","204"],"import { useState } from \"react\";\r\nimport { Link, Route } from \"react-router-dom\";\r\nimport useFetch from \"../../../Auth/useFetch\";\r\nimport Spinner from \"../../UI/Spinner\";\r\nimport \"./MentorRegions.scss\";\r\nimport WestMidland from \"../../../Assets/images/westmidlands.jpg\";\r\nimport London from \"../../../Assets/images/london.jpg\";\r\nimport NorthWest from \"../../../Assets/images/NorthWest.jpg\";\r\nimport Scotland from \"../../../Assets/images/scothland.jpg\";\r\nimport Rome from \"../../../Assets/images/Rome.jpg\";\r\nimport CapeTown from \"../../../Assets/images/CapeTown.png\";\r\nimport fallbackImage from \"../.../../../../Assets/images/inprogress.png\";\r\nimport StudentList from \"../../../Pages/MentorPages/MentorClassStudentList/StudentList\";\r\nimport WestMidlandClasses from \"../Classes/WestMidlands Classes/WestMidlandClasses\";\r\nimport ComingSoon from \"./ComingSoon\";\r\n\r\nconst MentorRegions = () => {\r\n  let { status, data, error } = useFetch(`${process.env.REACT_APP_URL}/api/region`);\r\n\r\n  if (status === \"error\") {\r\n    return <div>Error: {error.message}</div>;\r\n  } else if (status === \"success\") {\r\n    return <RegionList data={data} />;\r\n  } else {\r\n    return <Spinner />;\r\n  }\r\n};\r\n\r\nconst styling = {\r\n  stroke: \"rgb(209, 46, 47)\",\r\n  \"stroke-width\": 9,\r\n};\r\n\r\nconst RegionList = ({ data }) => {\r\n  const [regions, setRegions] = useState(data);\r\n\r\n  return (\r\n    <div>\r\n    <div className= \"row\">\r\n      <h1> Please Select A Region:</h1>\r\n      <svg height=\"30\" width=\"100%\">\r\n        <line x1=\"0\" y1=\"0\" x2=\"100%\" y2=\"0\" style={styling} />\r\n      </svg>\r\n      </div>\r\n      <div className=\"row\">\r\n        {regions.map(({ name }) => (\r\n          <div className=\"col-12 col-md-6 col-xl-4 rounded \" key={name}>\r\n            <div className=\"text-center image-container\">\r\n              <Link to={`/regions/classes/${name}`}>\r\n                <img\r\n                  src={\r\n                    name === \"West Midlands\"\r\n                      ? WestMidland\r\n                      : name === \"London\"\r\n                      ? London\r\n                      : name === \"Roma\"\r\n                      ? Rome\r\n                      : name === \"Scotland\"\r\n                      ? Scotland\r\n                      : name === \"North West\"\r\n                      ? NorthWest\r\n                      : name === \"Cape Town\"\r\n                      ? CapeTown\r\n                      : fallbackImage\r\n                  }\r\n                  className=\"rounded mx-auto class-image\"\r\n                  alt={name}\r\n                />\r\n                <h2 className=\"region\">{name}</h2>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div>\r\n        <Route\r\n          path={`/regions/classes/West Midlands`}\r\n          component={WestMidlandClasses}\r\n        />\r\n        <Route path={`/regions/classes/Cape Town`} component={ComingSoon} />\r\n        <Route path={`/regions/classes/London`} component={ComingSoon} />\r\n        <Route path={`/regions/classes/North West`} component={ComingSoon} />\r\n        <Route path={`/regions/classes/Roma`} component={ComingSoon} />\r\n        <Route path={`/regions/classes/Scotland`} component={ComingSoon} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MentorRegions;\r\n","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\MentorComponents\\Classes\\WestMidlands Classes\\WestMidlandClasses.jsx",["205"],"import { useState } from \"react\";\r\nimport { Link, Route } from \"react-router-dom\";\r\nimport useFetch from \"../../../../Auth/useFetch\";\r\nimport StudentList from \"../../../../Pages/MentorPages/MentorClassStudentList/StudentList\";\r\nimport Spinner from \"../../../UI/Spinner\";\r\nimport ComingSoon from \"../../Regions/ComingSoon\";\r\nimport { Button } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport ClassImage from \"../../../../Assets/images/class.png\";\r\nimport inProgress from \"../../../../Assets/images/inprogress.png\";\r\nimport \"./WestMidlandClasses.scss\";\r\n\r\nconst WestMidlandClasses = () => {\r\n  let { status, data, error } = useFetch(\r\n    `${process.env.REACT_APP_URL}/api/region/classes`\r\n  );\r\n  console.log(data);\r\n  if (status === \"error\") {\r\n    return <div>Error: {error.message}</div>;\r\n  } else if (status === \"success\") {\r\n    return <ClassList data={data} />;\r\n  } else {\r\n    return <Spinner />;\r\n  }\r\n};\r\n\r\nconst styling = {\r\n  stroke: \"rgb(209, 46, 47)\",\r\n  \"stroke-width\": 9,\r\n};\r\n\r\nconst ClassList = ({ data }) => {\r\n  const [regions, setRegions] = useState(data);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"backDiv\">\r\n        <Button href=\"/region\" className=\"backLink btn-lg rounded-lg\">\r\n          Back To Regions\r\n        </Button>\r\n      </div>\r\n\r\n      <h1> Please Select a Class:</h1>\r\n      <svg height=\"150\" width=\"100%\">\r\n        <line x1=\"0\" y1=\"0\" x2=\"100%\" y2=\"0\" style={styling} />\r\n      </svg>\r\n\r\n      <div className=\"row\">\r\n        {regions.map(({ name }) => (\r\n          <div className=\"col-12 col-md-6  rounded \" key={name}>\r\n            <div className=\"text-center image-container\">\r\n              <Link to={`/West Midlands/${name}/Students`}>\r\n                <img\r\n                  src={\r\n                    name === \"West Midlands Class 1\"\r\n                      ? ClassImage\r\n                      : name === \"West Midlands Class 2\"\r\n                      ? ClassImage\r\n                      : inProgress\r\n                  }\r\n                  className=\"rounded mx-auto classesImages\"\r\n                  alt={name}\r\n                />\r\n\r\n                <h2 className=\"region\">{name}</h2>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div>\r\n        <Route\r\n          path={`/West Midlands/West Midlands Class 1/Students`}\r\n          component={StudentList}\r\n        />\r\n        <Route\r\n          path={`/West Midlands/West Midlands Class 2/Students`}\r\n          component={ComingSoon}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WestMidlandClasses;\r\n","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\HowToIntro.js",[],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\RatingList.js",[],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\MentorComponents\\Regions\\ComingSoon.jsx",[],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\Pages\\MentorPages\\MentorIndividualGradeList\\MentorIndividualGradeList.jsx",["206","207"],"import React, {useState} from 'react';\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport useFetch from '../../../Auth/useFetch';\r\nimport { Progress } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Button } from \"antd\";\r\nimport './MentorIndividualGradeList.scss'\r\n//import { useAuth } from \"../../../Auth/use-auth\";\r\nimport Spinner from \"../../../components/UI/Spinner\";\r\nimport MentorSideBar from '../../../components/MentorComponents/MentorSideBar';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function MentorIndividualGradeList () {\r\n  let { id } = useParams();\r\n\r\n\r\n  let { status, data, error } = useFetch(`${process.env.REACT_APP_URL}/api/student/${id}/getStudentGrade`);\r\n  console.log((\"indiv stu\", data));\r\n  \r\n  if (status === 'error') {\r\n    return <div>Error: {error.message}</div>;\r\n  } else if (status === 'success') {\r\n    return <OneStudentsGrades  data={data} />;\r\n  }  else {\r\n    return <Spinner />;\r\n  }\r\n}\r\n\r\n\r\n\r\nconst styling = {\r\n  stroke: \"rgb(209, 46, 47)\",\r\n  \"stroke-width\": 9,\r\n};\r\n\r\n\r\n function OneStudentsGrades ({data}) {\r\n  const [grades, setGrades] = useState(data)\r\n  return (\r\n    <div className=\"row\">\r\n        <div className=\"col-sm-6 col-md-3 col-lg-3\">\r\n            <MentorSideBar />\r\n        </div>\r\n        <div className=\"col-sm-6 col-md-9 col-lg-9\">\r\n        <div className=\"row\">\r\n          <div className=\"col-1\">\r\n            <Button\r\n              href=\"/West%20Midlands/West%20Midlands%20Class%201/Students\"\r\n              className=\"backLink btn-lg rounded-lg\"\r\n            >\r\n              Back To Students\r\n            </Button>\r\n          </div>\r\n        </div>\r\n          <div className=\"intro row\">\r\n            <h1>{grades[0].name}'s Grades</h1>\r\n            <svg height=\"30\" width=\"700\">\r\n            <line x1=\"0\" y1=\"0\" x2=\"100%\" y2=\"0\" style={styling} />\r\n          </svg>\r\n          </div>\r\n          <div className=\"row\">\r\n          <div className=\"col-12 text-center\">\r\n            \r\n            <p>\r\n              Below are scores {grades[0].name}\r\n              <br />\r\n              Here you are able to view the average grades of the modules that they have filled in so far. The highest \r\n            </p>\r\n          </div>\r\n          <svg height=\"40\" width=\"100%\">\r\n            <line x1=\"0\" y1=\"0\" x2=\"100%\" y2=\"0\" style={styling} />\r\n          </svg>\r\n          </div>\r\n          <div className=\"row\">\r\n          \r\n            {grades.map(grade => { return(\r\n            \r\n              \r\n                <div className=\"moduleDiv col-12\">\r\n                  <div className=\"text-center individualGrade\"> \r\n                    <h3>{grade.subject_name}</h3>\r\n                      \r\n                      <Progress \r\n                        width={80} \r\n                        type=\"circle\"\r\n                        strokeColor={{\r\n                        '0%': '#ff0000',\r\n                        '100%': '#00ff00',\r\n                      }}\r\n                      percent={grade.round?grade.round:0}\r\n                      />\r\n                </div>\r\n            </div>)\r\n          \r\n        })}\r\n        </div>\r\n       \r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\MentorComponents\\MentorSideBar.jsx",[],{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"208","replacedBy":"212"},{"ruleId":"210","replacedBy":"213"},{"ruleId":"214","severity":1,"message":"215","line":15,"column":8,"nodeType":"216","messageId":"217","endLine":15,"endColumn":25},{"ruleId":"218","severity":1,"message":"219","line":50,"column":11,"nodeType":"220","endLine":50,"endColumn":24},{"ruleId":"214","severity":1,"message":"221","line":1,"column":17,"nodeType":"216","messageId":"217","endLine":1,"endColumn":25},{"ruleId":"208","replacedBy":"222"},{"ruleId":"210","replacedBy":"223"},{"ruleId":"214","severity":1,"message":"224","line":2,"column":10,"nodeType":"216","messageId":"217","endLine":2,"endColumn":15},{"ruleId":"214","severity":1,"message":"225","line":27,"column":20,"nodeType":"216","messageId":"217","endLine":27,"endColumn":31},{"ruleId":"214","severity":1,"message":"226","line":20,"column":17,"nodeType":"216","messageId":"217","endLine":20,"endColumn":28},{"ruleId":"214","severity":1,"message":"227","line":20,"column":54,"nodeType":"216","messageId":"217","endLine":20,"endColumn":64},{"ruleId":"228","severity":1,"message":"229","line":94,"column":6,"nodeType":"230","endLine":94,"endColumn":17,"suggestions":"231"},{"ruleId":"232","severity":1,"message":"233","line":132,"column":45,"nodeType":"234","messageId":"235","endLine":132,"endColumn":47},{"ruleId":"214","severity":1,"message":"226","line":20,"column":17,"nodeType":"216","messageId":"217","endLine":20,"endColumn":28},{"ruleId":"214","severity":1,"message":"227","line":20,"column":54,"nodeType":"216","messageId":"217","endLine":20,"endColumn":64},{"ruleId":"228","severity":1,"message":"229","line":70,"column":6,"nodeType":"230","endLine":70,"endColumn":17,"suggestions":"236"},{"ruleId":"232","severity":1,"message":"233","line":108,"column":45,"nodeType":"234","messageId":"235","endLine":108,"endColumn":47},{"ruleId":"214","severity":1,"message":"237","line":4,"column":25,"nodeType":"216","messageId":"217","endLine":4,"endColumn":28},{"ruleId":"214","severity":1,"message":"226","line":20,"column":17,"nodeType":"216","messageId":"217","endLine":20,"endColumn":28},{"ruleId":"214","severity":1,"message":"227","line":20,"column":54,"nodeType":"216","messageId":"217","endLine":20,"endColumn":64},{"ruleId":"228","severity":1,"message":"229","line":69,"column":6,"nodeType":"230","endLine":69,"endColumn":17,"suggestions":"238"},{"ruleId":"232","severity":1,"message":"233","line":107,"column":45,"nodeType":"234","messageId":"235","endLine":107,"endColumn":47},{"ruleId":"214","severity":1,"message":"226","line":21,"column":17,"nodeType":"216","messageId":"217","endLine":21,"endColumn":28},{"ruleId":"214","severity":1,"message":"227","line":21,"column":54,"nodeType":"216","messageId":"217","endLine":21,"endColumn":64},{"ruleId":"228","severity":1,"message":"229","line":71,"column":6,"nodeType":"230","endLine":71,"endColumn":17,"suggestions":"239"},{"ruleId":"232","severity":1,"message":"233","line":109,"column":45,"nodeType":"234","messageId":"235","endLine":109,"endColumn":47},{"ruleId":"214","severity":1,"message":"226","line":20,"column":17,"nodeType":"216","messageId":"217","endLine":20,"endColumn":28},{"ruleId":"214","severity":1,"message":"227","line":20,"column":54,"nodeType":"216","messageId":"217","endLine":20,"endColumn":64},{"ruleId":"228","severity":1,"message":"229","line":71,"column":6,"nodeType":"230","endLine":71,"endColumn":17,"suggestions":"240"},{"ruleId":"232","severity":1,"message":"233","line":109,"column":45,"nodeType":"234","messageId":"235","endLine":109,"endColumn":47},{"ruleId":"214","severity":1,"message":"237","line":4,"column":25,"nodeType":"216","messageId":"217","endLine":4,"endColumn":28},{"ruleId":"214","severity":1,"message":"226","line":20,"column":17,"nodeType":"216","messageId":"217","endLine":20,"endColumn":28},{"ruleId":"214","severity":1,"message":"227","line":20,"column":54,"nodeType":"216","messageId":"217","endLine":20,"endColumn":64},{"ruleId":"214","severity":1,"message":"241","line":50,"column":7,"nodeType":"216","messageId":"217","endLine":50,"endColumn":14},{"ruleId":"228","severity":1,"message":"229","line":75,"column":6,"nodeType":"230","endLine":75,"endColumn":17,"suggestions":"242"},{"ruleId":"232","severity":1,"message":"233","line":116,"column":45,"nodeType":"234","messageId":"235","endLine":116,"endColumn":47},{"ruleId":"214","severity":1,"message":"243","line":36,"column":20,"nodeType":"216","messageId":"217","endLine":36,"endColumn":31},{"ruleId":"214","severity":1,"message":"244","line":13,"column":8,"nodeType":"216","messageId":"217","endLine":13,"endColumn":19},{"ruleId":"214","severity":1,"message":"245","line":35,"column":19,"nodeType":"216","messageId":"217","endLine":35,"endColumn":29},{"ruleId":"214","severity":1,"message":"245","line":33,"column":19,"nodeType":"216","messageId":"217","endLine":33,"endColumn":29},{"ruleId":"214","severity":1,"message":"246","line":2,"column":10,"nodeType":"216","messageId":"217","endLine":2,"endColumn":14},{"ruleId":"214","severity":1,"message":"247","line":43,"column":18,"nodeType":"216","messageId":"217","endLine":43,"endColumn":27},"no-native-reassign",["248"],"no-negated-in-lhs",["249"],["248"],["249"],"no-unused-vars","'MentorClassesPage' is defined but never used.","Identifier","unusedVar","react/jsx-pascal-case","Imported JSX component Git_GitHub must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'Redirect' is defined but never used.",["248"],["249"],"'Route' is defined but never used.","'setSubjects' is assigned a value but never used.","'gradeStatus' is assigned a value but never used.","'gradeError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.","ArrayExpression",["250"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["251"],"'Tag' is defined but never used.",["252"],["253"],["254"],"'styling' is assigned a value but never used.",["255"],"'setStudents' is assigned a value but never used.","'StudentList' is defined but never used.","'setRegions' is assigned a value but never used.","'Link' is defined but never used.","'setGrades' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"256","fix":"257"},{"desc":"256","fix":"258"},{"desc":"256","fix":"259"},{"desc":"256","fix":"260"},{"desc":"256","fix":"261"},{"desc":"256","fix":"262"},"Update the dependencies array to be: [gradeData, state]",{"range":"263","text":"264"},{"range":"265","text":"264"},{"range":"266","text":"264"},{"range":"267","text":"264"},{"range":"268","text":"264"},{"range":"269","text":"264"},[2553,2564],"[gradeData, state]",[2068,2079],[2068,2079],[2058,2069],[2072,2083],[2153,2164]]